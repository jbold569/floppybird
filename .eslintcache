[{"D:\\Documents\\GitHub\\floppybird\\src\\index.tsx":"1","D:\\Documents\\GitHub\\floppybird\\src\\App.tsx":"2","D:\\Documents\\GitHub\\floppybird\\src\\components\\Game.tsx":"3","D:\\Documents\\GitHub\\floppybird\\src\\components\\Land.tsx":"4","D:\\Documents\\GitHub\\floppybird\\src\\components\\Pipe.tsx":"5","D:\\Documents\\GitHub\\floppybird\\src\\Utils.tsx":"6","D:\\Documents\\GitHub\\floppybird\\src\\components\\Bird.tsx":"7"},{"size":185,"mtime":1608397980741,"results":"8","hashOfConfig":"9"},{"size":156,"mtime":1609286685632,"results":"10","hashOfConfig":"9"},{"size":4361,"mtime":1609439685995,"results":"11","hashOfConfig":"9"},{"size":568,"mtime":1609345395712,"results":"12","hashOfConfig":"9"},{"size":3240,"mtime":1609442916138,"results":"13","hashOfConfig":"9"},{"size":2161,"mtime":1609347788508,"results":"14","hashOfConfig":"9"},{"size":3883,"mtime":1609347835312,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12k3w6a",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"D:\\Documents\\GitHub\\floppybird\\src\\index.tsx",[],["32","33"],"D:\\Documents\\GitHub\\floppybird\\src\\App.tsx",[],"D:\\Documents\\GitHub\\floppybird\\src\\components\\Game.tsx",["34"],"D:\\Documents\\GitHub\\floppybird\\src\\components\\Land.tsx",[],"D:\\Documents\\GitHub\\floppybird\\src\\components\\Pipe.tsx",[],"D:\\Documents\\GitHub\\floppybird\\src\\Utils.tsx",[],"D:\\Documents\\GitHub\\floppybird\\src\\components\\Bird.tsx",["35","36"],"import { playerBoundingBox, BoundingBox, GameState, toRad } from '../Utils'\r\n\r\ninterface FlyingProperties {\r\n  gravity: number;\r\n  jumpVelocity: number;\r\n  flightAreaBox: BoundingBox;\r\n}\r\n\r\ninterface BirdReactState {\r\n  gameState: GameState;\r\n  position: number;\r\n  rotation: number;\r\n}\r\n\r\nexport function BirdComponent(props: BirdReactState) {\r\n  let bird;\r\n\r\n  if (props.gameState == GameState.Playing) {\r\n    const aliveStyle = {\r\n      transform: \"translate3d(0px,\" + props.position + \"px, 0px)\" +\r\n        \"rotate3d(0, 0, 1, \" + props.rotation + \"deg)\",\r\n    };\r\n    bird = <div id=\"player\" className=\"bird animated\" style={aliveStyle}></div>;\r\n  }\r\n  if (props.gameState == GameState.PlayerDying) {\r\n    // TODO: add the death animation somehow, react transitions?\r\n    const deadStyle = {\r\n      transform: \"translate3d(0px,\" + props.position + \"px, 0px)\" +\r\n        \"rotate3d(0, 0, 1, \" + props.rotation + \"deg)\",\r\n    };\r\n    bird = <div id=\"player\" className=\"bird animated\" style={deadStyle}></div>;\r\n  }\r\n  return (\r\n    <>\r\n      {bird}\r\n    </>\r\n  )\r\n}\r\n\r\nclass Bird {\r\n  protected flyingProperties: FlyingProperties;\r\n  protected width = 34;\r\n  protected height = 24;\r\n  protected velocity = 0;\r\n  protected position = 180;\r\n  protected rotation = 0;\r\n  public box: BoundingBox = playerBoundingBox;\r\n\r\n  constructor(props: FlyingProperties) {\r\n    this.flyingProperties = props;\r\n    this.jump = this.jump.bind(this);\r\n  }\r\n\r\n  public setFlyingProperties(flyArea: BoundingBox) { this.flyingProperties.flightAreaBox = flyArea}\r\n\r\n  public getPosition() { return this.position; }\r\n  public getRotation() { return this.rotation; }\r\n\r\n  public update() {\r\n    this.velocity += this.flyingProperties.gravity;\r\n    this.rotation = Math.min((this.velocity / 10) * 90, 90);\r\n    this.position += this.velocity;\r\n\r\n    // Clip us back in\r\n    if (this.position < 0) {\r\n      this.position = 0;\r\n    }\r\n\r\n    if (this.position > this.flyingProperties.flightAreaBox.height) {\r\n      this.position = this.flyingProperties.flightAreaBox.height;\r\n    }\r\n\r\n\r\n    // We draw our bounding box around the bird through a couple steps. Our\r\n    // rotation of the bird is done through the center. So if we've rotated\r\n    // the bird 90 degrees (facing down), our bird becomes 5 px closer to\r\n    // the top and 5 px further from the left -- because it's 10 px wider\r\n    // than it is tall. To make this easier, we first calculate the height\r\n    // and width of our bird and then calculate its x,y based on that.\r\n    const rotationInRadians = Math.abs(toRad(this.rotation));\r\n    const widthMultiplier = this.height - this.width; // 24 - 34 = -10\r\n    const heightMultiplier = this.width - this.height; // 34 - 24 = 10\r\n\r\n    this.box.width = this.width + (widthMultiplier * Math.sin(rotationInRadians));\r\n    this.box.height = this.height + (heightMultiplier * Math.sin(rotationInRadians));\r\n\r\n    const xShift = (this.width - this.box.width) / 2;\r\n    const yShift = (this.height - this.box.height) / 2;\r\n\r\n    // We're 60 away from the left (magic number), + x shift\r\n    this.box.x = 60 + xShift;\r\n    // And we're our current bird position from the top + y shift + the\r\n    // distance to the top of the window, because of the sky\r\n    this.box.y = this.position + yShift + this.flyingProperties.flightAreaBox.y;\r\n  }\r\n\r\n  public jump() {\r\n    this.velocity = this.flyingProperties.jumpVelocity;\r\n    // sounds.jump.play();\r\n  }\r\n\r\n  public die() {\r\n\r\n\r\n    // this.element.style.transition = `\r\n\r\n    // `;\r\n    this.position = this.flyingProperties.flightAreaBox.height - this.height;\r\n    this.rotation = 90;\r\n   \r\n    // sounds.hit.play();\r\n    // await wait(500);\r\n    // sounds.die.play();\r\n    // await wait(500);\r\n    // this.domElement.style.transition = '';\r\n  }\r\n\r\n  // public draw() {\r\n  //     // drawDebugBox(this.element, this.box);\r\n  // }\r\n}\r\nexport default Bird;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":109,"column":30,"nodeType":"43","messageId":"44","endLine":109,"endColumn":32},{"ruleId":"41","severity":1,"message":"42","line":18,"column":23,"nodeType":"43","messageId":"44","endLine":18,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":25,"column":23,"nodeType":"43","messageId":"44","endLine":25,"endColumn":25},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]